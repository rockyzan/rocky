local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local HeaderLabel = Instance.new("TextLabel")
local CloseButton = Instance.new("TextButton")
local AutoClaimButton = Instance.new("TextButton")
local AutoClaimOnButton = Instance.new("TextButton")
local AutoClaimOffButton = Instance.new("TextButton")
local AutoUpgradeButton = Instance.new("TextButton")
local AutoUpgradeOnButton = Instance.new("TextButton")
local AutoUpgradeOffButton = Instance.new("TextButton")
local PlayerFollowDropdown = Instance.new("TextButton")
local PlayerListFrame = Instance.new("Frame")

-- Parent to PlayerGui
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Utility function to create buttons with rounded corners and gradient
local function createButton(parent, position, size, bgColor, text, textColor, font, scaled)
    local button = Instance.new("TextButton")
    button.Parent = parent
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = bgColor
    button.Text = text
    button.TextColor3 = textColor
    button.TextScaled = scaled
    button.Font = font
    button.BorderSizePixel = 0

    -- Rounded corners
    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0, 8)
    uicorner.Parent = button

    -- Gradient effect
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new(bgColor, bgColor:Lerp(Color3.fromRGB(255, 255, 255), 0.2))
    gradient.Rotation = 45
    gradient.Parent = button

    -- Shadow effect
    local shadow = Instance.new("UIStroke")
    shadow.Thickness = 2
    shadow.Color = Color3.fromRGB(30, 30, 30)
    shadow.Transparency = 0.5
    shadow.Parent = button

    return button
end

-- Main UI Frame (Movable)
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BackgroundTransparency = 0.1
MainFrame.Parent = ScreenGui
MainFrame.Active = true
MainFrame.Draggable = true

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = MainFrame

-- Header Label
HeaderLabel.Size = UDim2.new(0, 300, 0, 40)
HeaderLabel.Position = UDim2.new(0, 0, 0, 0)
HeaderLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
HeaderLabel.Text = "Blade Ball Farming"
HeaderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
HeaderLabel.TextScaled = true
HeaderLabel.Font = Enum.Font.GothamBold
HeaderLabel.Parent = MainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = HeaderLabel

-- Close Button
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -40, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextScaled = true
CloseButton.Font = Enum.Font.Gotham
CloseButton.Parent = MainFrame

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = CloseButton

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Auto Claim Rewards Section
local autoClaimLabel = Instance.new("TextLabel")
autoClaimLabel.Size = UDim2.new(0, 260, 0, 30)
autoClaimLabel.Position = UDim2.new(0.5, -130, 0.15, 0)
autoClaimLabel.BackgroundTransparency = 1
autoClaimLabel.Text = "Auto Claim Rewards"
autoClaimLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
autoClaimLabel.TextScaled = true
autoClaimLabel.Font = Enum.Font.Gotham
autoClaimLabel.Parent = MainFrame

AutoClaimOnButton = createButton(MainFrame, UDim2.new(0, 20, 0, 85), UDim2.new(0, 120, 0, 30), Color3.fromRGB(50, 200, 50), "On", Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, true)
AutoClaimOffButton = createButton(MainFrame, UDim2.new(0, 160, 0, 85), UDim2.new(0, 120, 0, 30), Color3.fromRGB(200, 50, 50), "Off", Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, true)

local autoClaimEnabled = false
AutoClaimOnButton.MouseButton1Click:Connect(function()
    autoClaimEnabled = true
    spawn(function()
        while autoClaimEnabled do
            local questIds = {"e427f2f0", "2a2af836", "d2a7c030", "1003dead"}
            for _, id in pairs(questIds) do
                game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/ClaimQuest"):InvokeServer(id)
            end
            wait(600)
        end
    end)
end)

AutoClaimOffButton.MouseButton1Click:Connect(function()
    autoClaimEnabled = false
end)

-- Auto Upgrade Section
local autoUpgradeLabel = Instance.new("TextLabel")
autoUpgradeLabel.Size = UDim2.new(0, 260, 0, 30)
autoUpgradeLabel.Position = UDim2.new(0.5, -130, 0.3, 0)
autoUpgradeLabel.BackgroundTransparency = 1
autoUpgradeLabel.Text = "Auto Upgrade"
autoUpgradeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
autoUpgradeLabel.TextScaled = true
autoUpgradeLabel.Font = Enum.Font.Gotham
autoUpgradeLabel.Parent = MainFrame

AutoUpgradeOnButton = createButton(MainFrame, UDim2.new(0, 20, 0, 145), UDim2.new(0, 120, 0, 30), Color3.fromRGB(50, 200, 50), "On", Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, true)
AutoUpgradeOffButton = createButton(MainFrame, UDim2.new(0, 160, 0, 145), UDim2.new(0, 120, 0, 30), Color3.fromRGB(200, 50, 50), "Off", Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, true)

local autoUpgradeEnabled = false
AutoUpgradeOnButton.MouseButton1Click:Connect(function()
    autoUpgradeEnabled = true
    spawn(function()
        while autoUpgradeEnabled do
            local args = {
                [1] = "Luck",
                [2] = "Crowns",
                [3] = 100
            }
            game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RE/ClanUpgrade"):FireServer(unpack(args))
            wait(120)
        end
    end)
end)

AutoUpgradeOffButton.MouseButton1Click:Connect(function()
    autoUpgradeEnabled = false
end)

-- Player Follow Section
local playerFollowLabel = Instance.new("TextLabel")
playerFollowLabel.Size = UDim2.new(0, 260, 0, 30)
playerFollowLabel.Position = UDim2.new(0.5, -130, 0.45, 0)
playerFollowLabel.BackgroundTransparency = 1
playerFollowLabel.Text = "Player Follow"
playerFollowLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
playerFollowLabel.TextScaled = true
playerFollowLabel.Font = Enum.Font.Gotham
playerFollowLabel.Parent = MainFrame

PlayerFollowDropdown = createButton(MainFrame, UDim2.new(0, 20, 0, 205), UDim2.new(0, 260, 0, 30), Color3.fromRGB(100, 100, 100), "Select Player to Follow", Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, true)

PlayerListFrame.Size = UDim2.new(0, 260, 0, 100)
PlayerListFrame.Position = UDim2.new(0, 20, 0, 245)
PlayerListFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
PlayerListFrame.Visible = false
PlayerListFrame.Parent = MainFrame

local playerListCorner = Instance.new("UICorner")
playerListCorner.CornerRadius = UDim.new(0, 8)
playerListCorner.Parent = PlayerListFrame

local onButton = createButton(MainFrame, UDim2.new(0, 20, 0, 355), UDim2.new(0, 80, 0, 30), Color3.fromRGB(50, 200, 50), "On", Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, true)
local offButton = createButton(MainFrame, UDim2.new(0, 100, 0, 355), UDim2.new(0, 80, 0, 30), Color3.fromRGB(200, 50, 50), "Off", Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, true)
local plusButton = createButton(MainFrame, UDim2.new(0, 200, 0, 355), UDim2.new(0, 40, 0, 30), Color3.fromRGB(0, 255, 255), "+", Color3.fromRGB(255, 255, 255), Enum.Font.GothamBold, false)
local minusButton = createButton(MainFrame, UDim2.new(0, 240, 0, 355), UDim2.new(0, 40, 0, 30), Color3.fromRGB(255, 165, 0), "-", Color3.fromRGB(255, 255, 255), Enum.Font.GothamBold, false)

-- Adjust text size for + and - buttons
plusButton.TextSize = 24
minusButton.TextSize = 24

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0, 260, 0, 20)
statusLabel.Position = UDim2.new(0, 20, 0, 345)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Status: Off"
statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.Parent = MainFrame

-- Variables for managing distances
local followDistance = 10
local dodgeDistance = 9.9
local lookAtEnabled = false
local selectedPlayer = nil

local function updateStatusLabel()
    statusLabel.Text = "Status: " .. (lookAtEnabled and "On" or "Off") .. " (Follow: " .. tostring(followDistance) .. " studs, Dodge: " .. tostring(dodgeDistance) .. " studs)"
end

-- Enhanced movement function with obstacle avoidance
local function moveToPlayer(targetPlayer)
    local localPlayer = game.Players.LocalPlayer
    local localRootPart = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
    local targetRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")

    if localRootPart and targetRootPart then
        local distance = (localRootPart.Position - targetRootPart.Position).Magnitude
        if math.abs(distance - followDistance) > 1 then
            local direction = (targetRootPart.Position - localRootPart.Position).unit
            local destination = targetRootPart.Position - (direction * followDistance)

            local raycastParams = RaycastParams.new()
            raycastParams.FilterDescendantsInstances = {localPlayer.Character}
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

            local rayResult = workspace:Raycast(localRootPart.Position, direction * followDistance, raycastParams)
            if rayResult then
                local dodgeOptions = {
                    Vector3.new(-direction.Z, 0, direction.X).unit, -- Left
                    Vector3.new(direction.Z, 0, -direction.X).unit, -- Right
                    direction * 0.5,                                -- Halfway
                    -direction                                      -- Back
                }
                for _, dodgeDirection in ipairs(dodgeOptions) do
                    local dodgePosition = localRootPart.Position + (dodgeDirection * dodgeDistance)
                    local dodgeRayResult = workspace:Raycast(localRootPart.Position, dodgeDirection * dodgeDistance, raycastParams)
                    if not dodgeRayResult then
                        destination = dodgePosition
                        break
                    end
                end
            end
            localPlayer.Character.Humanoid:MoveTo(destination)
        elseif distance < dodgeDistance then
            local retreatDirection = (localRootPart.Position - targetRootPart.Position).unit
            local retreatPosition = localRootPart.Position + (retreatDirection * dodgeDistance * 0.5)
            localPlayer.Character.Humanoid:MoveTo(retreatPosition)
        end
    end
end

-- Follow loop
local followLoop
local function startFollowing()
    if followLoop then return end
    followLoop = game:GetService("RunService").Heartbeat:Connect(function()
        if lookAtEnabled and selectedPlayer then
            moveToPlayer(selectedPlayer)
        end
    end)
end

local function stopFollowing()
    if followLoop then
        followLoop:Disconnect()
        followLoop = nil
    end
end

-- Player Follow Dropdown Logic
PlayerFollowDropdown.MouseButton1Click:Connect(function()
    PlayerListFrame.Visible = not PlayerListFrame.Visible
    PlayerListFrame:ClearAllChildren()
    
    for _, player in pairs(game.Players:GetPlayers()) do
        local PlayerButton = Instance.new("TextButton")
        PlayerButton.Size = UDim2.new(1, 0, 0, 25)
        PlayerButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        PlayerButton.Text = player.Name
        PlayerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        PlayerButton.TextScaled = true
        PlayerButton.Font = Enum.Font.Gotham
        PlayerButton.Parent = PlayerListFrame
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 4)
        buttonCorner.Parent = PlayerButton
        PlayerButton.MouseButton1Click:Connect(function()
            selectedPlayer = player
            PlayerFollowDropdown.Text = "Following: " .. player.Name
            PlayerListFrame.Visible = false
        end)
    end
end)

-- Button Event Listeners for Player Follow
onButton.MouseButton1Click:Connect(function()
    if selectedPlayer then
        lookAtEnabled = true
        updateStatusLabel()
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        startFollowing()
    end
end)

offButton.MouseButton1Click:Connect(function()
    lookAtEnabled = false
    statusLabel.Text = "Status: Off"
    statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    stopFollowing()
end)

plusButton.MouseButton1Click:Connect(function()
    followDistance = math.min(30, followDistance + 1)
    dodgeDistance = math.min(30, dodgeDistance + 1)
    updateStatusLabel()
end)

minusButton.MouseButton1Click:Connect(function()
    followDistance = math.max(1, followDistance - 1)
    dodgeDistance = math.max(1, dodgeDistance - 1)
    updateStatusLabel()
end)
